<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<!-- %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,%i索引【从数字0开始递增】,,, -->
	<!-- appender是configuration的子节点，是负责写日志的组件。 -->
	<!-- ConsoleAppender：把日志输出到控制台 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!--定义了一个过滤器,在LEVEL之下的日志输出不会被打印出来-->
        <!--这里定义了DEBUG，也就是控制台不会输出比ERROR级别小的日志-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <!-- encoder 默认配置为PatternLayoutEncoder -->
        <!--定义控制台输出格式-->
        <encoder>
            <pattern>%d [%thread] %-5level %logger{36} [%file : %line] - %msg%n</pattern>
        </encoder>
    </appender>

	<!-- RollingFileAppender：滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
	<appender name="SYSLOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- <File>logs/log.log</File> -->
		<!-- rollingPolicy:当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名。 -->
		<!-- TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 活动文件的名字会根据fileNamePattern的值，每隔一段时间改变一次 -->
			<!-- 文件名：log/sys.2017-12-05.0.log -->
			<fileNamePattern>D:/logs/netty-core-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>60MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<!-- pattern节点，用来设置日志的输入格式 -->
			<pattern>%d [%thread] %-5level %logger{36} [%file : %line] - %msg%n</pattern>
			<!-- 记录日志的编码 -->
			<charset>UTF-8</charset>
		</encoder>
	</appender>
	     
	<appender name="ASYNC_ROLLING_FILE" class="ch.qos.logback.classic.AsyncAppender">
		<queueSize>512</queueSize>    <!-- 队列长度，默认256 -->
		<includeCallerData>true</includeCallerData>
		<appender-ref ref="SYSLOG" />
	</appender>

	<!-- 控制台输出日志级别 -->
	<root level="INFO">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="ASYNC_ROLLING_FILE" />
	</root>

</configuration>